{"version":3,"sources":["images/loginHeadphones.jpg","authorization/config.ts","components/LoginButton/LoginButton.tsx","pages/LoginPage/LoginPage.tsx","components/Header/Header.tsx","components/SearchSection/SearchInput/SearchInput.tsx","components/SearchSection/SearchButton/SearchButton.tsx","store/actions/AddToFavouriteActions.ts","store/types/index.ts","store/actions/AuthorizationActions.ts","store/actions/FetchDataActions.ts","pages/LoadingPage/LoadingPage.tsx","components/SearchSection/SearchResults/Result/Result.tsx","components/SearchSection/SearchResults/SearchResult.tsx","store/actions/SearchingActions.ts","components/SearchSection/SearchSection.tsx","store/actions/PlayerActions.ts","components/AlbumsSection/AlbumDetails/Tracks/Tracks.tsx","components/AlbumsSection/AlbumDetails/AlbumDetails.tsx","components/AlbumsSection/Album/Album.tsx","components/Player/Player.tsx","store/actions/AlbumDetailsActions.ts","components/AlbumsSection/AlbumsSection.tsx","components/Main/Main.tsx","components/Footer/Footer.tsx","pages/WebsitePage/WebsitePage.tsx","App.tsx","serviceWorker.ts","store/reducers/AuthorizationReducers.ts","store/reducers/SearchingReducers.ts","store/reducers/AddToFavouriteReducers.ts","store/reducers/PlayerReducers.ts","store/reducers/AlbumDetailsReducers.ts","store/reducers/FetchDataReducers.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["module","exports","URL","process","getCodeFromUrl","websiteHref","window","location","href","includes","slice","indexOf","length","refreshAccessToken","refresh_token","dispatch","setAccessTokens","urlencoded","URLSearchParams","append","myHeaders","Headers","btoa","fetch","method","headers","body","then","res","status","json","Error","access_token","catch","err","console","log","LoginButton","className","LoginPage","style","backgroundImage","loginHeadphones","Header","SearchInput","inputValue","setInputValue","isSearchResultsVisible","showResults","placeholder","type","value","onClick","onChange","e","target","SearchButton","deleteAlbumFromList","albumID","dataError","errorMessage","LoadingPage","Result","listOfAlbums","isFetching","useSelector","state","fetchData","featching","authorization","favouriteAlbums","useDispatch","albums","filter","album","album_type","map","isDisabledAddBtn","find","favouriteAlbum","id","key","name","src","images","url","alt","artists","disabled","Authorization","albumObj","albumIMG","albumName","artistName","tracks","items","spotifyAlbumURL","external_urls","spotify","totalTracks","total_tracks","addAlbumToFavourite","message","fetchAlbumToFavourite","SearchResult","hideSearchResults","searchAlbums","showSearchResults","SearchSection","searching","useState","onSubmit","preventDefault","handleSubmit","setCurrentTrack","track","albumDetails","currentTrackName","currentTrackURL","preview_url","currentTrackNumber","track_number","allTracksInAlbum","currentAlbumArtist","stopMusic","nextTrack","Tracks","isTrackPlaying","stopBtnClasses","trackClasses","AlbumDetails","isPlaying","currentTrack","hideAlbumDetails","tracksListCurrentAlbum","rel","Album","showAlbumDetails","setAlbumDetails","tracksNowPlaying","Player","player","trackCurrentTime","useEffect","idInterval","setInterval","next","clearInterval","getTrack","isAlbumDetailsVisible","AlbumsSection","detailsAlbum","renderAlbums","reverse","Main","Footer","WebsitePage","App","connectOptions","codeToGetAccess","String","fetchOptions","redirect","getOptionsToConnect","localStorage","setItem","innerWidth","Boolean","hostname","match","INITIAL_STATE","getItem","local","JSON","parse","Audio","featched","error","rootReducer","combineReducers","action","newAlbum","stringify","newListWithoutAlbum","currentTime","play","pause","devTools","composeWithDevTools","applyMiddleware","thunk","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2901a36b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loginHeadphones.1df5799c.jpg\";","export const URL: string = `https://accounts.spotify.com/authorize?client_id=${process.env.REACT_APP_CLIENT_ID}&response_type=code&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}&scope=${process.env.REACT_APP_SCOPES}`;\n\nexport const getCodeFromUrl = () => {\n  const websiteHref = window.location.href;\n\n  if (websiteHref.includes(\"code\")) {\n    const codeToGetAccess = websiteHref.slice(\n      websiteHref.indexOf(\"=\") + 1,\n      websiteHref.length\n    );\n    return codeToGetAccess;\n  }\n  return \"\";\n};\n\nexport const getOptionsToConnect = () => {\n  const codeToGetAccess = getCodeFromUrl();\n\n  const myHeaders = new Headers();\n  myHeaders.append(\n    \"Authorization\",\n    `Basic ${btoa(\n      `${process.env.REACT_APP_CLIENT_ID}:${process.env.REACT_APP_CLIENT_SECRET}`\n    )}`\n  );\n\n  const urlencoded = new URLSearchParams();\n  urlencoded.append(\"grant_type\", \"authorization_code\");\n  urlencoded.append(\"code\", codeToGetAccess);\n  urlencoded.append(\"redirect_uri\", String(process.env.REACT_APP_REDIRECT_URI));\n\n  const fetchOptions: {} = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: urlencoded,\n    redirect: \"follow\",\n  };\n\n  return {\n    headers: myHeaders,\n    urlencoded: urlencoded,\n    fetchOptions: fetchOptions,\n    codeToGetAccess: codeToGetAccess,\n  };\n};\n\nexport const refreshAccessToken = (\n  refresh_token: string,\n  dispatch: Function,\n  setAccessTokens: Function\n) => {\n  const urlencoded = new URLSearchParams();\n  urlencoded.append(\"grant_type\", \"refresh_token\");\n  urlencoded.append(\"refresh_token\", refresh_token);\n\n  const myHeaders = new Headers();\n  myHeaders.append(\n    \"Authorization\",\n    `Basic ${btoa(\n      process.env.REACT_APP_CLIENT_ID +\n        \":\" +\n        process.env.REACT_APP_CLIENT_SECRET\n    )}`\n  );\n\n  fetch(`https://accounts.spotify.com/api/token`, {\n    method: \"POST\",\n    headers: myHeaders,\n    body: urlencoded,\n  })\n    .then((res) => {\n      if (res.status === 200) {\n        return res.json();\n      }\n      throw new Error();\n    })\n    .then((res) => {\n      dispatch(setAccessTokens(res.access_token, refresh_token));\n    })\n    .catch((err) => console.log(err));\n};\n","import React from \"react\";\nimport \"./LoginButton.scss\";\nimport { URL } from \"../../authorization/config\";\n\nexport const LoginButton: React.FC = () => (\n  <div className=\"login-page__buttons\">\n    <a className=\"login-page__login-btn\" href={URL}>\n      Zaloguj się do Spotify\n    </a>\n    <a\n      className=\"login-page__register-btn\"\n      href=\"https://www.spotify.com/pl/signup/\"\n    >\n      Nie masz konta? Załóż je tutaj.\n    </a>\n  </div>\n);\n","import React from \"react\";\nimport \"./LoginPage.scss\";\nimport loginHeadphones from \"../../images/loginHeadphones.jpg\";\nimport { LoginButton } from \"../../components/LoginButton/LoginButton\";\n\nexport const LoginPage: React.FC = () => (\n  <div\n    style={{ backgroundImage: `url(${loginHeadphones})` }}\n    className=\"login-page\"\n  >\n    <LoginButton />\n  </div>\n);\n","import React from \"react\";\nimport \"./Header.scss\";\n\nexport const Header: React.FC = () => (\n  <header className=\"header\">\n    <h1 className=\"header__title\">\n      Music from <span className=\"header__spotify\">Spotify</span>\n    </h1>\n  </header>\n);\n","import React from \"react\";\nimport \"./SearchInput.scss\";\n\nexport interface SearchInputProps {\n  inputValue: string;\n  setInputValue: Function;\n  isSearchResultsVisible: boolean;\n  showResults: Function;\n  dispatch: Function;\n}\n\nexport const SearchInput: React.FC<SearchInputProps> = ({\n  inputValue,\n  setInputValue,\n  isSearchResultsVisible,\n  showResults,\n  dispatch,\n}) => (\n  <input\n    className=\"search-section__input\"\n    placeholder=\"Wyszukaj...\"\n    type=\"text\"\n    value={inputValue}\n    onClick={() => {\n      if (!isSearchResultsVisible) dispatch(showResults());\n    }}\n    onChange={(e) => setInputValue(e.target.value)}\n  />\n);\n","import React from \"react\";\nimport \"./SearchButton.scss\";\n\nexport const SearchButton: React.FC = () => (\n  <button className=\"search-section__search-btn\">\n    <i className=\"fas fa-search\"></i>\n  </button>\n);\n","import { ADD_ALBUM_TO_LIST, DELETE_ALBUM_FROM_LIST } from \"../types\";\nimport { AlbumDetails } from \"../storeInterfaces\";\n\nexport const addAlbumToFavourite = (album: AlbumDetails) => ({\n  type: ADD_ALBUM_TO_LIST,\n  albumIMG: album.albumIMG,\n  albumID: album.albumID,\n  albumName: album.albumName,\n  artistName: album.artistName,\n  tracks: album.tracks,\n  spotifyAlbumURL: album.spotifyAlbumURL,\n  totalTracks: album.totalTracks,\n});\n\nexport const deleteAlbumFromList = (albumID: string) => ({\n  type: DELETE_ALBUM_FROM_LIST,\n  albumID: albumID,\n});\n","export const DATA_FETCHING = \"DATA_FETCHING\";\nexport const DATA_FETCHED = \"DATA_FETCHED\";\nexport const DATA_ERROR = \"DATA_ERROR\";\n\nexport const SET_ACCESS_TOKENS = \"SET_ACCESS_TOKENS\";\n\nexport const SEARCH_ALBUMS = \"SEARCH_ALBUMS\";\n\nexport const ADD_ALBUM_TO_LIST = \"ADD_ALBUM_TO_LIST\";\nexport const DELETE_ALBUM_FROM_LIST = \"DELETE_ALBUM_FROM_LIST\";\n\nexport const SET_CURRENT_TRACK = \"SET_CURRENT_TRACK\";\nexport const PLAY_CURRENT_TRACK = \"PLAY_CURRENT_TRACK\";\nexport const STOP_PLAYING_TRACK = \"STOP_PLAYING_TRACK\";\nexport const PAUSE_PLAYING_TRACK = \"PAUSE_PLAYING_TRACK\";\nexport const NEXT_PREV_TRACK = \"NEXT_PREV_TRACK\";\n\nexport const SHOW_ALBUM_DETAILS = \"SHOW_ALBUM_DETAILS\";\nexport const HIDE_ALBUM_DETAILS = \"HIDE_ALBUM_DETAILS\";\nexport const SET_ALBUM_DETAILS = \"SET_ALBUM_DETAILS\";\n\nexport const SHOW_SEARCH_RESULTS = \"SHOW_SEARCH_RESULTS\";\nexport const HIDE_SEARCH_RESULTS = \"HIDE_SEARCH_RESULTS\";\n","import { SET_ACCESS_TOKENS } from \"../types\";\n\nexport const setAccessTokens = (\n  access_token: string,\n  refresh_token: string\n) => ({\n  type: SET_ACCESS_TOKENS,\n  access_token: access_token,\n  refresh_token: refresh_token,\n});\n","import { DATA_FETCHING, DATA_FETCHED, DATA_ERROR } from \"../types\";\n\nexport const dataFetching = () => ({\n  type: DATA_FETCHING,\n});\n\nexport const dataFetched = () => ({\n  type: DATA_FETCHED,\n});\n\nexport const dataError = (errorMessage: string) => ({\n  type: DATA_ERROR,\n  errorMessage: errorMessage,\n});\n","import React from \"react\";\nimport \"./LoadingPage.scss\";\n\nexport const LoadingPage: React.FC = () => (\n  <div className=\"loading-page\">\n    <p className=\"loading-page__name\">Wczytuje dane...</p>\n  </div>\n);\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./Result.scss\";\n\nimport { refreshAccessToken } from \"../../../../authorization/config\";\nimport { GlobalStateSelector } from \"../../../../store/storeInterfaces\";\n\nimport { addAlbumToFavourite } from \"../../../../store/actions/AddToFavouriteActions\";\nimport { setAccessTokens } from \"../../../../store/actions/AuthorizationActions\";\nimport {\n  dataFetching,\n  dataFetched,\n  dataError,\n} from \"../../../../store/actions/FetchDataActions\";\n\nimport { LoadingPage } from \"../../../../pages/LoadingPage/LoadingPage\";\n\ninterface ResultProps {\n  listOfAlbums: [];\n}\n\ninterface Album {\n  artists: { name: string }[];\n  name: string;\n  id: string;\n  images: { url: string }[];\n  external_urls: { spotify: string };\n  total_tracks: number;\n}\n\nexport const Result: React.FC<ResultProps> = ({ listOfAlbums }) => {\n  const isFetching = useSelector(\n    (state: GlobalStateSelector) => state.fetchData.featching\n  );\n  const authorization = useSelector(\n    (state: GlobalStateSelector) => state.authorization\n  );\n  const favouriteAlbums = useSelector(\n    (state: GlobalStateSelector) => state.favouriteAlbums.favouriteAlbums\n  );\n\n  const { access_token, refresh_token } = authorization;\n  const dispatch = useDispatch();\n\n  const fetchAlbumToFavourite = (album: Album) => {\n    fetch(`https://api.spotify.com/v1/albums/${album.id}/tracks`, {\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n      },\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        }\n        throw new Error();\n      })\n      .then((res) => {\n        const albumObj = {\n          albumIMG: album.images[1].url,\n          albumID: album.id,\n          albumName: album.name,\n          artistName: album.artists[0].name,\n          tracks: res.items,\n          spotifyAlbumURL: album.external_urls.spotify,\n          totalTracks: album.total_tracks,\n        };\n        dispatch(dataFetched());\n        dispatch(addAlbumToFavourite(albumObj));\n      })\n      .catch((err) => {\n        dispatch(dataError(err.message));\n        refreshAccessToken(refresh_token, dispatch, setAccessTokens);\n      });\n  };\n\n  const albumsFilter = listOfAlbums.filter(\n    (album: { album_type: string }) => album.album_type === \"album\"\n  );\n\n  const albums = albumsFilter.map((album: Album) => {\n    const isDisabledAddBtn = favouriteAlbums.find(\n      (favouriteAlbum: { albumID: string }) =>\n        album.id === favouriteAlbum.albumID\n    );\n    return (\n      <div key={album.id} className=\"search-section__result\">\n        <p className=\"search-section__description\">{album.name}</p>\n        <img\n          className=\"search-section__album-image\"\n          src={album.images[1].url}\n          alt=\"Album\"\n        />\n        <p className=\"search-section__description\">{album.artists[0].name}</p>\n        <button\n          className=\"search-section__add-to-favourite\"\n          disabled={isDisabledAddBtn}\n          onClick={() => {\n            dispatch(dataFetching());\n            fetchAlbumToFavourite(album);\n          }}\n        >\n          {isDisabledAddBtn ? \"Dodano do ulubionych\" : \"Dodaj do ulubionych\"}\n        </button>\n      </div>\n    );\n  });\n\n  return (\n    <>\n      {isFetching ? <LoadingPage /> : null}\n      {albums}\n    </>\n  );\n};\n","import React from \"react\";\nimport \"./SearchResult.scss\";\nimport { Result } from \"./Result/Result\";\n\ninterface SearchResultProps {\n  listOfAlbums: [];\n  hideSearchResults: Function;\n  dispatch: Function;\n  setInputValue: Function;\n  searchAlbums: Function;\n}\n\nexport const SearchResult: React.FC<SearchResultProps> = ({\n  listOfAlbums,\n  hideSearchResults,\n  dispatch,\n  setInputValue,\n  searchAlbums,\n}) => (\n  <div className=\"search-section___wrapper\">\n    <div className=\"search-section__results\">\n      {listOfAlbums.length ? (\n        <Result listOfAlbums={listOfAlbums} />\n      ) : (\n        <p className=\"search-section__no-results\">Brak wyników wyszukiwania</p>\n      )}\n    </div>\n    <button\n      className=\"search-section__close\"\n      onClick={() => {\n        dispatch(hideSearchResults());\n        setInputValue(\"\");\n        dispatch(searchAlbums([]));\n      }}\n    >\n      Zamknij wyszukiwarkę\n    </button>\n  </div>\n);\n","import {\n  SEARCH_ALBUMS,\n  SHOW_SEARCH_RESULTS,\n  HIDE_SEARCH_RESULTS,\n} from \"../types\";\n\nexport const searchAlbums = (listOfAlbums: []) => ({\n  type: SEARCH_ALBUMS,\n  listOfAlbums: listOfAlbums,\n});\n\nexport const showSearchResults = () => ({\n  type: SHOW_SEARCH_RESULTS,\n  isSearchResultsVisible: true,\n});\n\nexport const hideSearchResults = () => ({\n  type: HIDE_SEARCH_RESULTS,\n  isSearchResultsVisible: false,\n});\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./SearchSection.scss\";\n\nimport { refreshAccessToken } from \"../../authorization/config\";\nimport { GlobalStateSelector } from \"../../store/storeInterfaces\";\n\nimport { SearchInput } from \"./SearchInput/SearchInput\";\nimport { SearchButton } from \"./SearchButton/SearchButton\";\nimport { SearchResult } from \"./SearchResults/SearchResult\";\nimport { LoadingPage } from \"../../pages/LoadingPage/LoadingPage\";\n\nimport { setAccessTokens } from \"../../store/actions/AuthorizationActions\";\nimport {\n  searchAlbums,\n  showSearchResults,\n  hideSearchResults,\n} from \"../../store/actions/SearchingActions\";\nimport {\n  dataFetching,\n  dataFetched,\n  dataError,\n} from \"../../store/actions/FetchDataActions\";\n\nexport const SearchSection: React.FC = () => {\n  const isFetching = useSelector(\n    (state: GlobalStateSelector) => state.fetchData.featching\n  );\n  const searching = useSelector(\n    (state: GlobalStateSelector) => state.searching\n  );\n  const authorization = useSelector(\n    (state: GlobalStateSelector) => state.authorization\n  );\n\n  const { isSearchResultsVisible, listOfAlbums } = searching;\n  const { access_token, refresh_token } = authorization;\n  const [inputValue, setInputValue] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (inputValue !== \"\") {\n      dispatch(dataFetching());\n      fetch(`https://api.spotify.com/v1/search?q=${inputValue}&type=album`, {\n        headers: {\n          Authorization: `Bearer ${access_token}`,\n        },\n      })\n        .then((res: Response) => {\n          if (res.status === 200) return res.json();\n          throw new Error();\n        })\n        .then((res) => {\n          dispatch(dataFetched());\n          dispatch(searchAlbums(res.albums.items));\n        })\n        .catch((err) => {\n          dispatch(dataError(err.message));\n          refreshAccessToken(refresh_token, dispatch, setAccessTokens);\n        });\n    } else {\n      dispatch(searchAlbums([]));\n    }\n  };\n\n  return (\n    <section className=\"search-section\">\n      {isFetching ? <LoadingPage /> : null}\n      <form\n        className=\"search-section__form\"\n        onSubmit={(e) => {\n          if (!isSearchResultsVisible) dispatch(showSearchResults());\n          handleSubmit(e);\n        }}\n      >\n        <div className=\"search-section__relative\">\n          <SearchInput\n            inputValue={inputValue}\n            setInputValue={setInputValue}\n            isSearchResultsVisible={isSearchResultsVisible}\n            showResults={showSearchResults}\n            dispatch={dispatch}\n          />\n          <SearchButton />\n        </div>\n      </form>\n\n      <div className=\"search-section__results-position\">\n        {isSearchResultsVisible ? (\n          <SearchResult\n            dispatch={dispatch}\n            hideSearchResults={hideSearchResults}\n            listOfAlbums={listOfAlbums}\n            setInputValue={setInputValue}\n            searchAlbums={searchAlbums}\n          />\n        ) : null}\n      </div>\n    </section>\n  );\n};\n","import {\n  SET_CURRENT_TRACK,\n  STOP_PLAYING_TRACK,\n  PLAY_CURRENT_TRACK,\n  PAUSE_PLAYING_TRACK,\n  NEXT_PREV_TRACK,\n} from \"../types\";\nimport { Track, AlbumDetails } from \"../storeInterfaces\";\n\nexport const setCurrentTrack = (track: Track, albumDetails: AlbumDetails) => {\n  return {\n    type: SET_CURRENT_TRACK,\n    currentTrackName: track.name,\n    currentTrackURL: track.preview_url,\n    currentTrackNumber: track.track_number,\n    allTracksInAlbum: albumDetails.totalTracks,\n    currentAlbumArtist: albumDetails.artistName,\n    tracks: albumDetails.tracks,\n  };\n};\n\nexport const playMusic = () => {\n  return {\n    type: PLAY_CURRENT_TRACK,\n  };\n};\n\nexport const stopMusic = () => {\n  return {\n    type: STOP_PLAYING_TRACK,\n  };\n};\n\nexport const pauseMusic = () => {\n  return {\n    type: PAUSE_PLAYING_TRACK,\n  };\n};\n\nexport const nextTrack = (\n  currentTrackName: string,\n  currentTrackURL: string,\n  currentTrackNumber: number\n) => {\n  return {\n    type: NEXT_PREV_TRACK,\n    currentTrackName: currentTrackName,\n    currentTrackURL: currentTrackURL,\n    currentTrackNumber: currentTrackNumber,\n  };\n};\n","import React from \"react\";\nimport \"./Tracks.scss\";\nimport { Track, AlbumDetails } from \"../../../../store/storeInterfaces\";\nimport { playMusic } from \"../../../../store/actions/PlayerActions\";\n\nexport interface TracksProps {\n  track: Track;\n  isTrackPlaying: boolean;\n  stopBtnClasses: string;\n  trackClasses: string;\n  dispatch: Function;\n  stopMusic: Function;\n  setCurrentTrack: Function;\n  albumDetails: AlbumDetails;\n}\n\nexport const Tracks: React.FC<TracksProps> = ({\n  track,\n  isTrackPlaying,\n  stopBtnClasses,\n  trackClasses,\n  dispatch,\n  stopMusic,\n  setCurrentTrack,\n  albumDetails,\n}) => (\n  <div className=\"albums-section__track-wrapper\">\n    {track.preview_url ? (\n      isTrackPlaying ? (\n        <button\n          className={stopBtnClasses}\n          onClick={() => {\n            dispatch(stopMusic());\n          }}\n        >\n          <i className=\"fas fa-stop\"></i>\n        </button>\n      ) : (\n        <button\n          className=\"albums-section__details-track-button\"\n          onClick={() => {\n            dispatch(setCurrentTrack(track, albumDetails));\n            dispatch(playMusic());\n          }}\n        >\n          <i className=\"fas fa-play\"></i>\n        </button>\n      )\n    ) : (\n      <button className=\"albums-section__details-track-button\" disabled>\n        <i className=\"fas fa-play\"></i>\n      </button>\n    )}\n\n    <p className={trackClasses}>\n      {track.track_number}. {track.name}\n    </p>\n  </div>\n);\n","import React from \"react\";\nimport \"./AlbumDetails.scss\";\nimport { Tracks } from \"./Tracks/Tracks\";\nimport {\n  setCurrentTrack,\n  stopMusic,\n} from \"../../../store/actions/PlayerActions\";\nimport {\n  Track,\n  AlbumDetails as AlbumDetailsInterface,\n} from \"../../../store/storeInterfaces\";\n// import { Player } from \"../../Player/Player\";\n\nexport interface AlbumDetailsProps {\n  albumDetails: AlbumDetailsInterface;\n  isPlaying: boolean;\n  currentTrack: string;\n  dispatch: Function;\n  hideAlbumDetails: Function;\n  deleteAlbumFromList: Function;\n}\n\nexport const AlbumDetails: React.FC<AlbumDetailsProps> = ({\n  albumDetails,\n  isPlaying,\n  currentTrack,\n  dispatch,\n  hideAlbumDetails,\n  deleteAlbumFromList,\n}) => {\n  const tracksListCurrentAlbum = albumDetails.tracks.map((track: Track) => {\n    const isTrackPlaying = isPlaying && currentTrack === track.preview_url;\n    const trackClasses = isTrackPlaying\n      ? \"albums-section__details-track-name albums-section__details-track-name--green\"\n      : \"albums-section__details-track-name\";\n    const stopBtnClasses = isTrackPlaying\n      ? \"albums-section__details-track-button albums-section__details-track-button--green\"\n      : \"albums-section__details-track-button\";\n    return (\n      <Tracks\n        key={track.id}\n        track={track}\n        isTrackPlaying={isTrackPlaying}\n        stopBtnClasses={stopBtnClasses}\n        trackClasses={trackClasses}\n        dispatch={dispatch}\n        stopMusic={stopMusic}\n        setCurrentTrack={setCurrentTrack}\n        albumDetails={albumDetails}\n      />\n    );\n  });\n\n  return (\n    <div className=\"albums-section__details-album\">\n      <div className=\"albums-section__album-info-wrapper\">\n        <img\n          className=\"albums-section__details-image\"\n          src={albumDetails.albumIMG}\n          alt=\"Album\"\n        />\n        <div className=\"albums-section__details-name-wrapper\">\n          <h1 className=\"albums-section__details-artist-name\">\n            {albumDetails.artistName}\n          </h1>\n          <h2 className=\"albums-section__details-album-name\">\n            {albumDetails.albumName}\n          </h2>\n        </div>\n        <div className=\"albums-section__details-buttons-wrapper\">\n          <a\n            className=\"albums-section__details-full-album-spotify\"\n            href={albumDetails.spotifyAlbumURL}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Pełny album znajdziesz tutaj\n          </a>\n          <button\n            className=\"albums-section__details-delete-album\"\n            onClick={() => {\n              dispatch(hideAlbumDetails());\n              dispatch(deleteAlbumFromList(albumDetails.albumID));\n            }}\n          >\n            Usuń album z ulubionych\n          </button>\n        </div>\n      </div>\n      <div className=\"albums-section__tracks-wrapper\">\n        {tracksListCurrentAlbum}\n      </div>\n      <button\n        className=\"albums-section__details-close\"\n        onClick={() => dispatch(hideAlbumDetails())}\n      >\n        <i className=\"fas fa-times\"></i>\n      </button>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./Album.scss\";\nimport { AlbumDetails } from \"../../../store/storeInterfaces\";\n\nexport interface AlbumProps {\n  album: AlbumDetails;\n  dispatch: Function;\n  showAlbumDetails: Function;\n  setAlbumDetails: Function;\n  tracksNowPlaying: [];\n}\n\nexport const Album: React.FC<AlbumProps> = ({\n  album,\n  dispatch,\n  showAlbumDetails,\n  setAlbumDetails,\n  tracksNowPlaying,\n}) => (\n  <div className=\"albums-section__wrapper\">\n    <img src={album.albumIMG} alt=\"Album\" className=\"albums-section__image\" />\n    {album.tracks === tracksNowPlaying ? (\n      <i className=\"fab fa-itunes-note albums-section__note\"></i>\n    ) : null}\n\n    <div\n      className=\"albums-section__hover-div\"\n      onClick={() => {\n        dispatch(\n          setAlbumDetails({\n            albumIMG: album.albumIMG,\n            albumID: album.albumID,\n            albumName: album.albumName,\n            artistName: album.artistName,\n            tracks: album.tracks,\n            spotifyAlbumURL: album.spotifyAlbumURL,\n            totalTracks: album.totalTracks,\n          })\n        );\n        dispatch(showAlbumDetails());\n      }}\n    >\n      <p className=\"albums-section__name-hover\">{album.artistName}</p>\n      <p className=\"albums-section__name-hover\">{album.albumName}</p>\n    </div>\n  </div>\n);\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./Player.scss\";\nimport { GlobalStateSelector } from \"../../store/storeInterfaces\";\n\nimport {\n  playMusic,\n  nextTrack,\n  pauseMusic,\n  stopMusic,\n} from \"../../store/actions/PlayerActions\";\n\nexport interface PlayerProps {\n  tracks: {\n    name: string;\n    preview_url: string;\n    track_number: number;\n    artists: { name: string }[];\n  }[];\n}\n\nexport const Player: React.FC<PlayerProps> = ({ tracks }) => {\n  const dispatch = useDispatch();\n  const player = useSelector((state: GlobalStateSelector) => state.player);\n  const {\n    currentTrackURL,\n    currentTrackName,\n    currentAlbumArtist,\n    currentTrackNumber,\n    allTracksInAlbum,\n    isPlaying,\n    trackCurrentTime,\n  } = player;\n\n  useEffect(() => {\n    let idInterval: NodeJS.Timeout;\n    if (isPlaying) {\n      idInterval = setInterval(() => {\n        dispatch(pauseMusic());\n        next();\n      }, 30000 - trackCurrentTime * 1000);\n    }\n\n    return () => clearInterval(idInterval);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPlaying, currentTrackURL]);\n\n  const play = () => {\n    dispatch(playMusic());\n  };\n\n  const pause = () => {\n    dispatch(pauseMusic());\n  };\n\n  const stop = () => {\n    dispatch(stopMusic());\n  };\n\n  const next = () => {\n    if (currentTrackNumber === allTracksInAlbum) {\n      const getTrack = tracks.filter((track) => track.track_number === 1);\n      dispatch(nextTrack(getTrack[0].name, getTrack[0].preview_url, 1));\n    } else {\n      const getTrack = tracks.filter(\n        (track) => track.track_number === currentTrackNumber + 1\n      );\n      dispatch(\n        nextTrack(\n          getTrack[0].name,\n          getTrack[0].preview_url,\n          getTrack[0].track_number\n        )\n      );\n    }\n    dispatch(playMusic());\n  };\n\n  const prev = () => {\n    if (currentTrackNumber === 1) {\n      const getTrack = tracks.filter(\n        (track) => track.track_number === allTracksInAlbum\n      );\n      dispatch(\n        nextTrack(getTrack[0].name, getTrack[0].preview_url, allTracksInAlbum)\n      );\n    } else {\n      const getTrack = tracks.filter(\n        (track) => track.track_number === currentTrackNumber - 1\n      );\n      dispatch(\n        nextTrack(\n          getTrack[0].name,\n          getTrack[0].preview_url,\n          currentTrackNumber - 1\n        )\n      );\n    }\n    dispatch(playMusic());\n  };\n\n  return (\n    <div className=\"player\">\n      <p className=\"player__track-name\">{`${\n        currentTrackNumber ? currentTrackNumber : \"\"\n      }. ${currentAlbumArtist} - ${currentTrackName}`}</p>\n\n      <div className=\"player__btn-wrapper\">\n        <button className=\"player__controlers\" onClick={prev}>\n          <i className=\"fas fa-step-forward player__prev\"></i>\n        </button>\n        <button className=\"player__controlers\" onClick={stop}>\n          <i className=\"fas fa-stop\"></i>\n        </button>\n        {isPlaying ? (\n          <button className=\"player__controlers\" onClick={pause}>\n            <i className=\"fas fa-pause\"></i>\n          </button>\n        ) : (\n          <button className=\"player__controlers\" onClick={play}>\n            <i className=\"fas fa-play\"></i>\n          </button>\n        )}\n        <button className=\"player__controlers\" onClick={next}>\n          <i className=\"fas fa-step-forward\"></i>\n        </button>\n      </div>\n    </div>\n  );\n};\n","import {\n  SHOW_ALBUM_DETAILS,\n  HIDE_ALBUM_DETAILS,\n  SET_ALBUM_DETAILS,\n} from \"../types\";\nimport { AlbumDetails } from \"../storeInterfaces\";\n\nexport const showAlbumDetails = () => ({\n  type: SHOW_ALBUM_DETAILS,\n  isAlbumDetailsVisible: true,\n});\n\nexport const hideAlbumDetails = () => ({\n  type: HIDE_ALBUM_DETAILS,\n  isAlbumDetailsVisible: false,\n});\n\nexport const setAlbumDetails = (albumDetails: AlbumDetails) => ({\n  type: SET_ALBUM_DETAILS,\n  albumDetails: albumDetails,\n});\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./AlbumsSection.scss\";\n\nimport { AlbumDetails } from \"./AlbumDetails/AlbumDetails\";\nimport { Album } from \"./Album/Album\";\nimport { Player } from \"../Player/Player\";\n\nimport {\n  AlbumDetails as AlbumDetailsInterface,\n  GlobalStateSelector,\n} from \"../../store/storeInterfaces\";\n\nimport { deleteAlbumFromList } from \"../../store/actions/AddToFavouriteActions\";\nimport {\n  hideAlbumDetails,\n  showAlbumDetails,\n  setAlbumDetails,\n} from \"../../store/actions/AlbumDetailsActions\";\n\nexport const AlbumsSection: React.FC = () => {\n  const favouriteAlbums = useSelector(\n    (state: GlobalStateSelector) => state.favouriteAlbums.favouriteAlbums\n  );\n  const player = useSelector((state: GlobalStateSelector) => state.player);\n  const detailsAlbum = useSelector(\n    (state: GlobalStateSelector) => state.albumDetails\n  );\n\n  const { albumDetails, isAlbumDetailsVisible } = detailsAlbum;\n  const { currentTrackURL, isPlaying, tracks } = player;\n  const dispatch = useDispatch();\n\n  const renderAlbums = favouriteAlbums.map((album: AlbumDetailsInterface) => (\n    <Album\n      key={album.albumID}\n      album={album}\n      dispatch={dispatch}\n      showAlbumDetails={showAlbumDetails}\n      setAlbumDetails={setAlbumDetails}\n      tracksNowPlaying={tracks}\n    />\n  ));\n\n  return (\n    <section className=\"albums-section\">\n      {renderAlbums.length ? (\n        renderAlbums.reverse()\n      ) : (\n        <div className=\"albums-section__no-results\">\n          <p className=\"albums-section__no-result-name\">Brak albumów</p>\n        </div>\n      )}\n\n      {isAlbumDetailsVisible ? (\n        <AlbumDetails\n          albumDetails={albumDetails}\n          isPlaying={isPlaying}\n          currentTrack={currentTrackURL}\n          dispatch={dispatch}\n          hideAlbumDetails={hideAlbumDetails}\n          deleteAlbumFromList={deleteAlbumFromList}\n        />\n      ) : null}\n      {isPlaying || currentTrackURL ? <Player tracks={tracks} /> : null}\n    </section>\n  );\n};\n","import React from \"react\";\nimport \"./Main.scss\";\nimport { SearchSection } from \"../SearchSection/SearchSection\";\nimport { AlbumsSection } from \"../AlbumsSection/AlbumsSection\";\n\nexport const Main: React.FC = () => (\n  <main className=\"main\">\n    <SearchSection />\n    <AlbumsSection />\n  </main>\n);\n","import React from \"react\";\r\nimport \"./Footer.scss\";\r\n\r\nexport const Footer: React.FC = () => (\r\n  <footer className=\"footer\">\r\n    <p className=\"footer__author\">\r\n      Projekt i realizacja{\" \"}\r\n      <a\r\n        className=\"footer__author--link\"\r\n        href=\"https://marcin-hercog.netlify.app\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Marcin Hercog\r\n      </a>\r\n    </p>\r\n  </footer>\r\n);\r\n","import React from \"react\";\nimport \"./WebsitePage.scss\";\nimport { Header } from \"../../components/Header/Header\";\nimport { Main } from \"../../components/Main/Main\";\nimport { Footer } from \"../../components/Footer/Footer\";\n\nexport const WebsitePage: React.FC = () => (\n  <div className=\"website-page\">\n    <Header />\n    <Main />\n    <Footer />\n  </div>\n);\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.scss\";\n\nimport { LoginPage } from \"./pages/LoginPage/LoginPage\";\nimport { WebsitePage } from \"./pages/WebsitePage/WebsitePage\";\nimport { LoadingPage } from \"./pages/LoadingPage/LoadingPage\";\n\nimport { getOptionsToConnect } from \"./authorization/config\";\nimport { GlobalStateSelector, GlobalAction } from \"./store/storeInterfaces\";\n\nimport { showSearchResults } from \"./store/actions/SearchingActions\";\nimport { setAccessTokens } from \"./store/actions/AuthorizationActions\";\nimport {\n  dataFetching,\n  dataFetched,\n  dataError,\n} from \"./store/actions/FetchDataActions\";\n\nexport const App = () => {\n  const access_token = useSelector(\n    (state: GlobalStateSelector) => state.authorization.access_token\n  );\n  const isFetching = useSelector(\n    (state: GlobalStateSelector) => state.fetchData.featching\n  );\n  const dispatch = useDispatch();\n\n  const connectOptions = getOptionsToConnect();\n  const { codeToGetAccess, fetchOptions } = connectOptions;\n\n  useEffect(() => {\n    if (codeToGetAccess && !access_token) {\n      dispatch(dataFetching());\n      fetch(`https://accounts.spotify.com/api/token`, fetchOptions)\n        .then((res: Response) => {\n          if (res.status === 200) return res.json();\n          throw new Error();\n        })\n        .then((res: GlobalAction) => {\n          dispatch(dataFetched());\n          dispatch(setAccessTokens(res.access_token, res.refresh_token));\n        })\n        .catch((err: Error) => {\n          dispatch(dataError(err.message));\n          console.log(err);\n        });\n    }\n\n    if (!codeToGetAccess) {\n      localStorage.setItem(\"access_token\", \"\");\n      localStorage.setItem(\"refresh_token\", \"\");\n    }\n\n    if (window.innerWidth >= 1024) {\n      dispatch(showSearchResults());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {isFetching ? <LoadingPage /> : null}\n      {access_token ? <WebsitePage /> : <LoginPage />}\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_ACCESS_TOKENS } from \"../types\";\nimport { getCodeFromUrl } from \"../../authorization/config\";\nimport { GlobalState, GlobalAction } from \"../storeInterfaces\";\n\nconst accessLocal = getCodeFromUrl()\n  ? String(localStorage.getItem(\"access_token\"))\n  : \"\";\nconst refreshLocal = localStorage.getItem(\"refresh_token\")\n  ? String(localStorage.getItem(\"refresh_token\"))\n  : \"\";\n\nconst INITIAL_STATE: GlobalState = {\n  access_token: accessLocal,\n  refresh_token: refreshLocal,\n};\n\nexport const authorizationReducers = (\n  state = INITIAL_STATE,\n  action: GlobalAction\n) => {\n  switch (action.type) {\n    case SET_ACCESS_TOKENS:\n      localStorage.setItem(\"access_token\", action.access_token);\n      localStorage.setItem(\"refresh_token\", action.refresh_token);\n      return {\n        ...state,\n        access_token: action.access_token,\n        refresh_token: action.refresh_token,\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  SEARCH_ALBUMS,\n  SHOW_SEARCH_RESULTS,\n  HIDE_SEARCH_RESULTS,\n} from \"../types\";\nimport { GlobalState, GlobalAction } from \"../storeInterfaces\";\n\nconst INITIAL_STATE: GlobalState = {\n  listOfAlbums: [],\n  isSearchResultsVisible: false,\n};\n\nexport const searchingReducer = (\n  state = INITIAL_STATE,\n  action: GlobalAction\n) => {\n  switch (action.type) {\n    case SHOW_SEARCH_RESULTS:\n      return {\n        ...state,\n        isSearchResultsVisible: action.isSearchResultsVisible,\n      };\n\n    case HIDE_SEARCH_RESULTS:\n      return {\n        ...state,\n        isSearchResultsVisible: action.isSearchResultsVisible,\n      };\n\n    case SEARCH_ALBUMS:\n      return {\n        ...state,\n        listOfAlbums: action.listOfAlbums,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { ADD_ALBUM_TO_LIST, DELETE_ALBUM_FROM_LIST } from \"../types\";\nimport { GlobalState, GlobalAction } from \"../storeInterfaces\";\n\nconst local = localStorage.getItem(\"favouriteAlbums\")\n  ? localStorage.getItem(\"favouriteAlbums\")\n  : \"\";\n\nconst INITIAL_STATE: GlobalState = {\n  favouriteAlbums: local ? JSON.parse(local) : [],\n};\n\nexport const addFavouriteAlbumReducer = (\n  state = INITIAL_STATE,\n  action: GlobalAction\n) => {\n  switch (action.type) {\n    case ADD_ALBUM_TO_LIST:\n      const newAlbum = {\n        albumIMG: action.albumIMG,\n        albumID: action.albumID,\n        albumName: action.albumName,\n        artistName: action.artistName,\n        tracks: action.tracks,\n        spotifyAlbumURL: action.spotifyAlbumURL,\n        totalTracks: action.totalTracks,\n      };\n      localStorage.setItem(\n        \"favouriteAlbums\",\n        JSON.stringify([...state.favouriteAlbums, newAlbum])\n      );\n      return {\n        ...state,\n        favouriteAlbums: [...state.favouriteAlbums, newAlbum],\n      };\n\n    case DELETE_ALBUM_FROM_LIST:\n      const newListWithoutAlbum = state.favouriteAlbums.filter(\n        (album: { albumID: string }) => album.albumID !== action.albumID\n      );\n      localStorage.setItem(\n        \"favouriteAlbums\",\n        JSON.stringify(newListWithoutAlbum)\n      );\n      return {\n        ...state,\n        favouriteAlbums: newListWithoutAlbum,\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  SET_CURRENT_TRACK,\n  STOP_PLAYING_TRACK,\n  PLAY_CURRENT_TRACK,\n  PAUSE_PLAYING_TRACK,\n  NEXT_PREV_TRACK,\n} from \"../types\";\nimport { GlobalState, GlobalAction } from \"../storeInterfaces\";\n\nconst player = new Audio();\n\nconst INITIAL_STATE: GlobalState = {\n  currentTrackName: \"\",\n  currentTrackURL: \"\",\n  isPlaying: false,\n  currentTrackNumber: 0,\n  allTracksInAlbum: 0,\n  currentAlbumArtist: \"\",\n  tracks: [],\n  trackCurrentTime: 0,\n};\n\nexport const currentTrackReducer = (\n  state = INITIAL_STATE,\n  action: GlobalAction\n) => {\n  switch (action.type) {\n    case SET_CURRENT_TRACK:\n      player.src = action.currentTrackURL;\n      return {\n        ...state,\n        currentTrackName: action.currentTrackName,\n        currentTrackURL: action.currentTrackURL,\n        isPlaying: false,\n        currentTrackNumber: action.currentTrackNumber,\n        allTracksInAlbum: action.allTracksInAlbum,\n        currentAlbumArtist: action.currentAlbumArtist,\n        tracks: action.tracks,\n        trackCurrentTime: player.currentTime,\n      };\n    case PLAY_CURRENT_TRACK:\n      if (player.src !== \"https://p.scdn.co/mp3-preview/\") player.play();\n      return { ...state, isPlaying: true };\n\n    case STOP_PLAYING_TRACK:\n      player.pause();\n      return {\n        ...state,\n        currentTrackName: \"\",\n        currentTrackURL: \"\",\n        isPlaying: false,\n        currentTrackNumber: \"\",\n        allTracksInAlbum: 0,\n        currentAlbumArtist: \"\",\n        tracks: [],\n        trackCurrentTime: 0,\n      };\n\n    case PAUSE_PLAYING_TRACK:\n      player.pause();\n      return {\n        ...state,\n        isPlaying: false,\n        trackCurrentTime: player.currentTime,\n      };\n\n    case NEXT_PREV_TRACK:\n      const src = action.currentTrackURL\n        ? action.currentTrackURL\n        : \"https://p.scdn.co/mp3-preview/\";\n      player.src = src;\n      return {\n        ...state,\n        currentTrackName: action.currentTrackName,\n        currentTrackURL: src,\n        currentTrackNumber: action.currentTrackNumber,\n        trackCurrentTime: 0,\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  SHOW_ALBUM_DETAILS,\n  HIDE_ALBUM_DETAILS,\n  SET_ALBUM_DETAILS,\n} from \"../types\";\nimport { GlobalState, GlobalAction } from \"../storeInterfaces\";\n\nconst INITIAL_STATE: GlobalState = {\n  isAlbumDetailsVisible: false,\n  albumDetails: {\n    albumIMG: \"\",\n    albumID: \"\",\n    albumName: \"\",\n    artistName: \"\",\n    tracks: [],\n    spotifyAlbumURL: \"\",\n    totalTracks: 0,\n  },\n};\n\nexport const albumDetailsReducer = (\n  state = INITIAL_STATE,\n  action: GlobalAction\n) => {\n  switch (action.type) {\n    case SHOW_ALBUM_DETAILS:\n      return {\n        ...state,\n        isAlbumDetailsVisible: action.isAlbumDetailsVisible,\n      };\n\n    case HIDE_ALBUM_DETAILS:\n      return {\n        ...state,\n        isAlbumDetailsVisible: action.isAlbumDetailsVisible,\n      };\n\n    case SET_ALBUM_DETAILS:\n      return {\n        ...state,\n        albumDetails: action.albumDetails,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { DATA_FETCHING, DATA_FETCHED, DATA_ERROR } from \"../types\";\nimport { GlobalState, GlobalAction } from \"../storeInterfaces\";\n\nconst INITIAL_STATE: GlobalState = {\n  featching: false,\n  featched: false,\n  error: false,\n  errorMessage: \"\",\n};\n\nexport const dataFetchReducer = (\n  state = INITIAL_STATE,\n  action: GlobalAction\n) => {\n  switch (action.type) {\n    case DATA_FETCHING:\n      return {\n        ...state,\n        featching: true,\n        featched: false,\n        error: false,\n        errorMessage: \"\",\n      };\n\n    case DATA_FETCHED:\n      return {\n        ...state,\n        featching: false,\n        featched: true,\n        error: false,\n        errorMessage: \"\",\n      };\n\n    case DATA_ERROR:\n      return {\n        ...state,\n        featching: false,\n        featched: false,\n        error: true,\n        errorMessage: action.errorMessage,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { authorizationReducers } from \"./AuthorizationReducers\";\nimport { searchingReducer } from \"./SearchingReducers\";\nimport { addFavouriteAlbumReducer } from \"./AddToFavouriteReducers\";\nimport { currentTrackReducer } from \"./PlayerReducers\";\nimport { albumDetailsReducer } from \"./AlbumDetailsReducers\";\nimport { dataFetchReducer } from \"./FetchDataReducers\";\nimport { combineReducers } from \"redux\";\n\nexport const rootReducer = combineReducers({\n  authorization: authorizationReducers,\n  searching: searchingReducer,\n  favouriteAlbums: addFavouriteAlbumReducer,\n  player: currentTrackReducer,\n  albumDetails: albumDetailsReducer,\n  fetchData: dataFetchReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { rootReducer } from \"./reducers\";\n\nconst devTools = composeWithDevTools(applyMiddleware(thunk));\n\nexport const store = createStore(rootReducer, devTools);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}